// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from requires.djinni

#include "requires_all_interface.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

RequiresAllInterface::RequiresAllInterface() : ::djinni::JniInterface<::RequiresAllInterface, RequiresAllInterface>("djinni/it/RequiresAllInterface$CppProxy") {}

RequiresAllInterface::~RequiresAllInterface() = default;


CJNIEXPORT void JNICALL Java_djinni_it_RequiresAllInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::RequiresAllInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_djinni_it_RequiresAllInterface_00024CppProxy_native_1someMethod(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RequiresAllInterface>(nativeRef);
        auto r = ref->some_method();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}
CJNIEXPORT jboolean JNICALL Java_djinni_it_RequiresAllInterface_00024CppProxy_native_1operator_1equals(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_obj)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RequiresAllInterface>(nativeRef);
        const auto& otherRef = ::djinni_generated::RequiresAllInterface::toCpp(jniEnv, j_obj);
        auto r = ::RequiresAllInterface::Operators::equals(*ref, *otherRef);
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}
CJNIEXPORT jint JNICALL Java_djinni_it_RequiresAllInterface_00024CppProxy_native_1hash_1code(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RequiresAllInterface>(nativeRef);
        auto r = ::RequiresAllInterface::Operators::hash_code(*ref);
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}
CJNIEXPORT jint JNICALL Java_djinni_it_RequiresAllInterface_00024CppProxy_native_1compare(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_obj)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RequiresAllInterface>(nativeRef);
        const auto& otherRef = ::djinni_generated::RequiresAllInterface::toCpp(jniEnv, j_obj);
        auto r = ::RequiresAllInterface::Operators::compare(*ref, *otherRef);
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
