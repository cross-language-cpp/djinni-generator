// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from my_record.djinni

#include "my_record.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

MyRecord::MyRecord() = default;

MyRecord::~MyRecord() = default;

auto MyRecord::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<MyRecord>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.id)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.info)),
                                                           ::djinni::get(::djinni::Set<::djinni::String>::fromCpp(jniEnv, c.store)),
                                                           ::djinni::get(::djinni::Map<::djinni::String, ::djinni::I32>::fromCpp(jniEnv, c.hash)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto MyRecord::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<MyRecord>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_id)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_info)),
            ::djinni::Set<::djinni::String>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_store)),
            ::djinni::Map<::djinni::String, ::djinni::I32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_hash))};
}

}  // namespace djinni_generated
