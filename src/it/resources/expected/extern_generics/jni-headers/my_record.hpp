// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from extern_generics.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "my_record.hpp"

namespace djinni_generated {

class MyRecord final {
public:
    using CppType = ::MyRecord;
    using JniType = jobject;

    using Boxed = MyRecord;

    ~MyRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    MyRecord();
    friend ::djinni::JniClass<MyRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("djinni/it/MyRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V") };
    const jfieldID field_builtin { ::djinni::jniGetFieldID(clazz.get(), "builtin", "Ljava/util/ArrayList;") };
    const jfieldID field_external { ::djinni::jniGetFieldID(clazz.get(), "external", "Ljava/util/ArrayList;") };
    const jfieldID field_optionalBuiltin { ::djinni::jniGetFieldID(clazz.get(), "optionalBuiltin", "Ljava/util/ArrayList;") };
    const jfieldID field_optionalExternal { ::djinni::jniGetFieldID(clazz.get(), "optionalExternal", "Ljava/util/ArrayList;") };
    const jfieldID field_listOfList { ::djinni::jniGetFieldID(clazz.get(), "listOfList", "Ljava/util/ArrayList;") };
    const jfieldID field_listOfExternal { ::djinni::jniGetFieldID(clazz.get(), "listOfExternal", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
