// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from cppcli_extern_dependent_interface.djinni

#pragma once

#include "../cpp-headers/dependent_interface.hpp"
#include "InterfaceDependency.hpp"
#include <memory>

public ref class DependentInterface abstract {
public:
    virtual void MethodTakingInterfaceDependency(InterfaceDependency^ dep) abstract;

    virtual void MethodTakingOptionalInterfaceDependency(InterfaceDependency^ dep) abstract;

    virtual InterfaceDependency^ MethodReturningInterfaceDependency() abstract;

    virtual InterfaceDependency^ MethodReturningOptionalInterfaceDependency() abstract;

internal:
    using CppType = std::shared_ptr<::DependentInterface>;
    using CppOptType = std::shared_ptr<::DependentInterface>;
    using CsType = DependentInterface^;

    static CppType ToCpp(CsType cs);
    static CsType FromCppOpt(const CppOptType& cpp);
    static CsType FromCpp(const CppType& cpp) { return FromCppOpt(cpp); }
};
