// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from my_cpp_interface.djinni

#include <iostream> // for debugging
#include <cassert>
#include "djinni/cwrapper/wrapper_marshal.hpp"
#include "../cpp-headers/my_cpp_interface.hpp"

#include "cw__my_cpp_interface.hpp"

std::shared_ptr<::MyCppInterface> DjinniWrapperMyCppInterface::get(djinni::WrapperRef<DjinniWrapperMyCppInterface> dw) {
    if (dw) {
        return dw->wrapped_obj;
    }
    return nullptr;
}

void my_cpp_interface___wrapper_add_ref(DjinniWrapperMyCppInterface * dh) {
    dh->ref_count.fetch_add(1);
}
void my_cpp_interface___wrapper_dec_ref(DjinniWrapperMyCppInterface * dh) {
    const size_t ref = dh->ref_count.fetch_sub(1);
    if (ref == 1) {// value before sub is returned
        delete dh;
    }
}
djinni::Handle<DjinniWrapperMyCppInterface> DjinniWrapperMyCppInterface::wrap(std::shared_ptr<::MyCppInterface> obj) {
    if (obj)
        return djinni::Handle<DjinniWrapperMyCppInterface>(new DjinniWrapperMyCppInterface{ std::move(obj) }, my_cpp_interface___wrapper_dec_ref);
    return nullptr;
}

void cw__my_cpp_interface_method_returning_nothing(DjinniWrapperMyCppInterface * djinni_this, int32_t value) {
    try {
        djinni_this->wrapped_obj->method_returning_nothing(value);
    } CW_TRANSLATE_EXCEPTIONS_RETURN();
}

int32_t cw__my_cpp_interface_method_returning_some_type(DjinniWrapperMyCppInterface * djinni_this, DjinniString * key) {
    std::unique_ptr<DjinniString> _key(key);
    try {
        return djinni_this->wrapped_obj->method_returning_some_type(DjinniString::toCpp(std::move(_key)));
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}

int32_t cw__my_cpp_interface_method_changing_nothing(DjinniWrapperMyCppInterface * djinni_this) {
    try {
        return djinni_this->wrapped_obj->method_changing_nothing();
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}
int32_t cw__my_cpp_interface_get_version(void) {
    try {
        return ::MyCppInterface::get_version();
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}
