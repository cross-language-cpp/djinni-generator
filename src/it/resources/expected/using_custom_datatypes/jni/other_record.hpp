// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from using_custom_datatypes.djinni

#pragma once

#include "djinni_support.hpp"
#include "other_record.hpp"

namespace djinni_generated {

class OtherRecord final {
public:
    using CppType = ::OtherRecord;
    using JniType = jobject;

    using Boxed = OtherRecord;

    ~OtherRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    OtherRecord();
    friend ::djinni::JniClass<OtherRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("djinni/it/OtherRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ldjinni/it/CustomDatatype;)V") };
    const jfieldID field_customDatatypeData { ::djinni::jniGetFieldID(clazz.get(), "customDatatypeData", "Ldjinni/it/CustomDatatype;") };
};

}  // namespace djinni_generated
